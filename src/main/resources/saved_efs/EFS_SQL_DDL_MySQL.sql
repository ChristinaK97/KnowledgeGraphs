create table if not exists bucket (
	BUCKET_ID INT PRIMARY KEY,
	DESCRIPTION VARCHAR(100),
	PAYMENTDAYS INT,
	DATE_CREATED DATETIME
);


-- ##########   PERSON     ########## --

create table if not exists person (
	PERSON_ID INT PRIMARY KEY,
    FULL_NAME VARCHAR(100),
	SEARCH_KEY VARCHAR(100),
	SECONDARY_ID INT UNIQUE,
    BIRTHDAY DATETIME,
	LANGUAGE_ VARCHAR(100),
	GENDER CHAR(1),
	D_CREATED DATETIME,
	D_UPDATED DATETIME,
	DT_LAST_ACTION DATETIME
);

create table if not exists person_extra (
	PERSON_ID INT PRIMARY KEY,
	NATIONALITY VARCHAR(100),
	PERSON_STATUS VARCHAR(100),
	IS_DECEASED BOOLEAN,
	RESIDENCE_COUNTRY VARCHAR(100),
	
	FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID)
);

create table if not exists address (
	ADDRESS_ID INT PRIMARY KEY,
	PERSON_ID INT,
    ADDRESS VARCHAR(100),
	DT_UPDATED DATETIME,
	SECONDARY_ID INT UNIQUE,
	COUNTRY_CODE VARCHAR(100),
	IS_COMMUNICATION BOOLEAN,
    
    FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID)
);


create table if not exists email (
	EMAIL_ID INT PRIMARY KEY,
	PERSON_ID INT,
    EMAIL VARCHAR(100),
	DT_UPDATED DATETIME,
	SECONDARY_ID INT UNIQUE,
	IS_COMMUNICATION BOOLEAN,
    FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID)
);

create table if not exists phone (
	PHONE_ID INT PRIMARY KEY,
	PERSON_ID INT,
	DT_UPDATED DATETIME,
	SECONDARY_ID INT UNIQUE,
	IS_COMMUNICATION BOOLEAN,
    FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID)
);
-- ################################################# --

-- ##########   CASES     ########## --

create table if not exists cases (
 	CASE_ID INT PRIMARY KEY,
	SECONDARY_ID INT UNIQUE,
	INTEREST FLOAT,
	LENTDATE DATETIME,
	LENTAMOUNT FLOAT,
	LENTINTEREST FLOAT,
	LENTEXPENSES FLOAT,
	LENTINITAMOUNT FLOAT,
	TOTPAYAMOUNT FLOAT,
	TOTPAYINTEREST FLOAT,
	TOTPAYEXPENSES FLOAT,
	SEARCHKEY VARCHAR(100) UNIQUE,
	LASTPAYDATE DATETIME,
	BUCKET_ID INT,
	LASTPAYAMOUNT FLOAT,
	LASTUPDATE DATETIME,
	DATECREATED DATETIME,
	CURRENCY VARCHAR(100),
	CASE_TYPE_ID INT,
	USER_UPDATED INT,
	DT_UPDATED DATETIME,
	BASE_INTEREST_RATE FLOAT,
	LAST_CONTACT_ID INT,
	LAST_ACTION INT,
	LAST_ACTION_DATE DATETIME,
	LAST_ACTION_USER_ID INT,
    FOREIGN KEY (BUCKET_ID) REFERENCES bucket(BUCKET_ID)
 );

create table if not exists case_extra (
	CASE_ID INT PRIMARY KEY,
	PHASE_ID INT,
	SEGMENT_ID INT,
	BANK_ACCOUNT_NUMBER INT,
	DELAY_DAYS INT,
	RESTRUCTURED INT,
	EXPIRY_DATE DATETIME,
	CURRENT_BRANCH_ID INT,
	ACCOUNTSTATUS VARCHAR(100),
	CONTRACT_NO INT,
	STATEMENT_BALANCE FLOAT,
	AVAILABLE_BALANCE FLOAT,
	STATEMENT_OVERDUE_AMOUNT FLOAT,
	APPROVED_CAPITAL FLOAT,
	LAST_INST_DATE DATETIME,
	STATEMENT_MIN_PAY FLOAT,
	BALANCE_LIMIT FLOAT,
	TOTAL_BALANCE FLOAT,
	OVERDUE_CAPITAL FLOAT,
	OVERDUE_INTEREST FLOAT,
	OVERDUE_EXPENSES FLOAT,
	TOTAL_OUTSTANDING FLOAT,
	PORTFOLIO_CODE VARCHAR(100),
	PAY_REF_NUMBER VARCHAR(100),
	
	FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID)
);

create table if not exists case_person_type (
	CASE_PERSON_TYPE_ID INT PRIMARY KEY,
	DESCRIPTION VARCHAR(100),
	CASE_PERSON_TYPE_KEY INT UNIQUE
);

create table if not exists case_person (
	CASE_ID INT NOT NULL,
	PERSON_ID INT NOT NULL,
	CASE_PERSON_TYPE_ID INT,
	DT_UPDATED DATETIME,
	INACTIVE_ BOOLEAN,
	SOURCE_ VARCHAR(100),
	
	PRIMARY KEY (CASE_ID, PERSON_ID),
	FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID),
	FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID),
    FOREIGN KEY (CASE_PERSON_TYPE_ID) REFERENCES case_person_type(CASE_PERSON_TYPE_ID)
);

-- ##########   ACTION     ########## --

create table if not exists actcategory (
	ACTCATEGORY_ID INT PRIMARY KEY,
	DESCRIPTION VARCHAR(100)
);

create table if not exists act_type (
	ACTIONCODE_ID INT PRIMARY KEY,
	DESCRIPTION VARCHAR(100),
	TYPE_ INT,
	ISADMIN BOOLEAN,
	ACT_TYPE_ID INT,
	DEF_ACTCATEGORY_ID INT,
	ALLOWS_BACKDATED BOOLEAN,
	SETTLE_PLAN_UUID INT,
	PHONEBEHAVIOR INT,
	ACTION_CONTACT_STATUS VARCHAR(100),
	ACTION_CONTACT_TYPE VARCHAR(100),
    FOREIGN KEY (DEF_ACTCATEGORY_ID) REFERENCES actcategory(ACTCATEGORY_ID)
);

-- ################################################# --
-- ##########   SETTLEMENT     ########## --

create table if not exists settle_plan (
	SETTLE_PLAN_ID INT PRIMARY KEY,
	NAME_ VARCHAR(100),
	DESCRIPTION VARCHAR(100),
	DATEUPDATED DATETIME,
	USERUPDATED DATETIME,
	MAX_PTPS_WARNING INT,
	MAX_PTPS_MAX_ACCEPTED INT,
	MIN_PTP_DIST_WARNING INT,
	MIN_PTP_DIST_MIN_ACCEPTED INT, 
	MAX_PTP_AMOUNT_WARNING FLOAT,
	MAX_PTP_AMOUNT_MAX_ACCEPTED FLOAT,
	WARN_AMOUNT_PERCENTAGE FLOAT,
	MAX_PTP_DIST_MAX_ACCEPTED INT,
	MAX_PTP_DIST_WARNING INT,
	MAX_FIRST_PTP_DIST_ACCEPTED INT,
	MAX_FIRST_PTP_DIST_WARNING INT,
	MAX_PLAN_DUR_MAX_ACCEPTED INT,
	MAX_PLAN_DUR_WARNING INT,
	APPROVAL_METHOD INT,
	SETTLEMENT_PLAN_TYPE INT,
	INTEREST_RATE FLOAT,
	MINIMUM_INTEREST_RATE_WARNING FLOAT,
	MINIMUM_INTEREST_RATE_ERROR FLOAT
);

create table if not exists msettlement_master (
	SETTLEMENT_MASTER_ID INT PRIMARY KEY,
	STATUS VARCHAR(100),
	CURRENCY VARCHAR(100),
	ACCEPTANCE_LEVEL INT,
	INITIAL_SETTLEMENT_MASTER_ID INT,
	UTILISATION_STATUS INT, 
	SETTLE_PLAN_ID INT,
	INITIAL_AMOUNT FLOAT,
	SETTLE_AMOUNT FLOAT,
	ISWRITEOFF BOOLEAN,
	RELATED_CASES INT,
	INITIAL_BASE_RATE FLOAT,
	FINAL_BASE_RATE FLOAT,
	UTILISATION_STATUS_DATE DATETIME,
	UTILISATION_STATUS_USER_ID INT,
    FOREIGN KEY (INITIAL_SETTLEMENT_MASTER_ID) REFERENCES msettlement_master(SETTLEMENT_MASTER_ID),
    FOREIGN KEY (SETTLE_PLAN_ID) REFERENCES settle_plan(SETTLE_PLAN_ID)
);

create table if not exists msettlement_detail (
	SETTLEMENT_DETAIL_ID INT PRIMARY KEY, 
	SETTLEMENT_MASTER_ID INT,
	PROMISEDDATE DATETIME,
	PROMISEDAMOUNT FLOAT,
	PAIDAMOUNT FLOAT,
	DT_CREATED DATETIME,
	DT_UPDATED DATETIME,
    FOREIGN KEY (SETTLEMENT_MASTER_ID) REFERENCES msettlement_master(SETTLEMENT_MASTER_ID)
);



create table if not exists contact (
	CONTACT_ID INT PRIMARY KEY,
	ACTIONCODE_ID INT,
	CASE_ID INT,
	USER_ID INT,
	CONTACTDATE DATETIME,
	PAYDATE DATETIME,
	PAYAMOUNT FLOAT,
	RECEITNO VARCHAR(100),
	COST_ FLOAT,
	ENTRYDATE DATETIME,
	ENTRY_USER_ID INT,
	SETTLEMENT_MASTER_ID INT,
	PERSON_ID INT,
	CURRENCY_CODE VARCHAR(100),
	DATEUPDATED DATETIME,
    FOREIGN KEY (ACTIONCODE_ID) REFERENCES act_type(ACTIONCODE_ID),
    FOREIGN KEY (SETTLEMENT_MASTER_ID) REFERENCES msettlement_master(SETTLEMENT_MASTER_ID),
    FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID),
    FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID)
);

ALTER TABLE cases
ADD CONSTRAINT fk_cases_contact_id
FOREIGN KEY (LAST_CONTACT_ID) REFERENCES contact (CONTACT_ID);

create table if not exists payment (
	PAY_ID INT PRIMARY KEY,
	PAYDATE DATETIME,
	PAYAMOUNT FLOAT,
	CONTACT_ID INT,
	CASE_ID INT,
	PAYMENTTYPE VARCHAR(100),
	SDATE DATETIME,
	PAY_KEY INT UNIQUE,
	CURRENCY_CODE VARCHAR(100), 
	DESCRIPTION VARCHAR(100),
    FOREIGN KEY (CONTACT_ID) REFERENCES contact(CONTACT_ID),
    FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID)
);

-- ################################################# --
-- ##########   PRODUCT     ########## --

create table if not exists productcategory (
	PRODUCTCATEGORY_ID INT PRIMARY KEY,
	CODE VARCHAR(100),
	DESCRIPTION VARCHAR(100)
);

create table if not exists productreportcategory (
	PRODUCTREPORTCATEGORY_ID INT PRIMARY KEY,
	DESCRIPTION VARCHAR(100)
);

create table if not exists product (
	PRODUCT_ID INT PRIMARY KEY,
	PRODUCTCATEGORY_ID INT,
	CODE VARCHAR(100),
	DESCRIPTION VARCHAR(100),
	PRODUCTREPORTCATEGORY_ID INT,
    FOREIGN KEY (PRODUCTCATEGORY_ID) REFERENCES productcategory(PRODUCTCATEGORY_ID),
    FOREIGN KEY (PRODUCTREPORTCATEGORY_ID) REFERENCES productreportcategory(PRODUCTREPORTCATEGORY_ID)

);

-- ################################################# --
-- ##########   QUEUE     ########## --

create table if not exists queue (
	QUEUE_ID INT PRIMARY KEY,
	QUEUE_KEY INT UNIQUE,
	CAPTION VARCHAR(100),
	DESCRIPTION VARCHAR(100),
	CAN_EXPIRE BOOLEAN,
	OWNER_USER INT,
	QUEUE_TYPE INT,
	EXIT_ACTION_CODE INT,
	ORDER_TYPE INT,
	IN_STRATEGY INT,
	WORKING_MODE INT, 
	WORKED_ACTION_CATEGORY INT,
	TOTAL INT,
	WORKED INT,
	EXITED INT,
	REMAINING INT
);

create table if not exists queue_case (
	QUEUE_ID INT NOT NULL,
	CASE_ID INT NOT NULL,
	ACCOUNT_ENTRY_DATE DATETIME, 
	ACCOUNT_ENTRY_RULE_ID INT,
	ACCOUNT_ORDER VARCHAR(100),
	STRATEGY_CASE_ID INT, 
	IS_WORKED BOOLEAN,
	PERSON_ID INT,
	
	PRIMARY KEY(QUEUE_ID, CASE_ID),
	FOREIGN KEY (QUEUE_ID) REFERENCES queue(QUEUE_ID),
	FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID),
    FOREIGN KEY (PERSON_ID) REFERENCES person(PERSON_ID)
);
-- ################################################# --

create table if not exists rer_metric (
	CASE_ID INT PRIMARY KEY,
	LAST_SETT_STATUS_ID INT, 
	LAST_SETT_COMB_STATUS_ID INT, 
	SETTLE_ISWRITEOFF BOOLEAN,
	PORTFOLIO_CODE VARCHAR(100),
	CASE_TYPE_ID INT, 
	BUCKET_ID_PREV INT,
	PRODUCTCATEGORY_ID INT, 
	TOTAL_BALANCE FLOAT,
	TIMES_IN_COLLECTION INT,
	STRATEGY_SEGMENT_ID INT,
	PRODUCT_ID INT,
	PRODUCTREPORTCATEGORY_ID INT,
	CLIENT_ID INT, 
	PAST_DUE_AMOUNT FLOAT,
	LAST_SETTLE_DATE DATETIME,
	LAST_PAY_DATE DATETIME,
	LAST_PAY_AMOUNT FLOAT,
	LAST_BILLING_DATE DATETIME,
	EXPIRY_DATE DATETIME,
	DAYS_FROM_LAST_PAY INT, 
	DAYS_PAST_DUE INT,
	DAYS_IN_PHASE INT,
	DAYS_IN_COLLECTION INT, 
	PHASE_ENTRY_DATE DATETIME,
	PHASE_ID INT,
	CURRENT_BRANCH_ID INT,
	CURRENCY_ID INT,
	CONTRACT_DATE DATETIME,
	BUCKET_ID INT,
	ACCOUNT_STATUS VARCHAR(100),
	NO_VALID_PHONE BOOLEAN,
	NO_VALID_ADDRESS BOOLEAN,
	BALANCE_LIMIT FLOAT,
	DAYS_IN_HANDLING_QUEUE INT, 
	TOTAL_OUTSTANDING FLOAT,
	
	FOREIGN KEY (CASE_ID) REFERENCES cases(CASE_ID),
    FOREIGN KEY (BUCKET_ID_PREV) REFERENCES bucket(BUCKET_ID),
    FOREIGN KEY (PRODUCTCATEGORY_ID) REFERENCES productcategory(PRODUCTCATEGORY_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES product(PRODUCT_ID),
    FOREIGN KEY (PRODUCTREPORTCATEGORY_ID) REFERENCES productreportcategory(PRODUCTREPORTCATEGORY_ID),
    FOREIGN KEY (CLIENT_ID) REFERENCES person(PERSON_ID),
    FOREIGN KEY (BUCKET_ID) REFERENCES bucket(BUCKET_ID)
);



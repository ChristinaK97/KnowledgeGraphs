<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>org.example</groupId>
  <artifactId>KnowledgeGraphsJava</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>KnowledgeGraphs</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <repositories>
    <repository>
      <id>www.dcm4che.org</id>
      <name>dcm4che Repository</name>
      <url>https://maven.scijava.org/content/repositories/public/</url>
    </repository>
<!--    <repository>-->
<!--      <id>www.dcm4che2.org</id>-->
<!--      <name>dcm4che2 Repository</name>-->
<!--      <url>https://www.dcm4che.org/maven2/</url>-->
<!--    </repository>-->
  </repositories>

<!-- =============================================================================================================== -->
  <dependencies>


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.31</version>
    </dependency>

    <!-- Causes conflicts with spring boot's logging dependencies -->
    <!--<dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.7</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.7</version>
    </dependency>-->

    <!-- OWL API -->
    <dependency>
      <groupId>net.sourceforge.owlapi</groupId>
      <artifactId>owlapi-distribution</artifactId>
      <version>5.5.0</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.owlapi</groupId>
      <artifactId>owlapi-api</artifactId>
      <version>5.5.0</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.owlapi</groupId>
      <artifactId>owlapi-impl</artifactId>
      <version>5.5.0</version>
    </dependency>
    <!--  -->

    <!-- APACHE JENA -->
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-core</artifactId>
      <version>4.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-arq</artifactId>
      <version>4.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>apache-jena-libs</artifactId>
      <version>4.8.0</version>
      <type>pom</type>
    </dependency>
    <!--  -->

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.10.1</version>
    </dependency>
    <dependency>
      <groupId>tech.tablesaw</groupId>
      <artifactId>tablesaw-core</artifactId>
      <version>0.43.1</version>
    </dependency>
    <dependency>
      <groupId>tech.tablesaw</groupId>
      <artifactId>tablesaw-excel</artifactId>
      <version>0.43.1</version>
    </dependency>


    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.10.0</version>
    </dependency>

    <!-- DICOM reader. Install:
      mvn install:install-file -Dfile="C:\Users\karal\progr\onto_workspace\ConvertDatabase\lib\pixelmed.jar" -DgroupId="pixelmed" -DartifactId="pixelmed" -Dversion="1.0.0" -Dpackaging=jar

    <dependency>
      <groupId>pixelmed</groupId>
      <artifactId>pixelmed</artifactId>
      <version>1.0.0</version>
    </dependency> -->

    <!--
mvn install:install-file -Dfile="C:\Users\karal\progr\onto_workspace\ConvertDatabase\lib\dcm4che-core-5.30.0.jar" -DgroupId="org.dcm4che" -DartifactId="dcm4che-core" -Dversion="5.30.0" -Dpackaging=jar
mvn install:install-file -Dfile="C:\Users\karal\progr\onto_workspace\ConvertDatabase\lib\dcm4che-image-5.30.0.jar" -DgroupId="org.dcm4che" -DartifactId="dcm4che-image" -Dversion="5.30.0" -Dpackaging=jar
mvn install:install-file -Dfile="C:\Users\karal\progr\onto_workspace\ConvertDatabase\lib\dcm4che-imageio-5.30.0.jar" -DgroupId="org.dcm4che" -DartifactId="dcm4che-imageio" -Dversion="5.30.0" -Dpackaging=jar
mvn install:install-file -Dfile="C:\Users\karal\progr\onto_workspace\ConvertDatabase\lib\dcm4che-tool-common-5.30.0.jar" -DgroupId="org.dcm4che" -DartifactId="dcm4che-tool-commons" -Dversion="5.30.0" -Dpackaging=jar
    -->
    <!-- dcm4che-core library -->
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-core</artifactId>
      <version>5.30.0</version>
    </dependency>

    <!-- dcm4che-image library -->
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-image</artifactId>
      <version>5.30.0</version>
    </dependency>

    <!-- dcm4che-tool-commons library -->
    <dependency>
      <groupId>org.dcm4che.tool</groupId>
      <artifactId>dcm4che-tool-common</artifactId>
      <version>5.30.0</version>
    </dependency>

    <!-- dcm4che-image io library -->
    <dependency>
      <groupId>org.dcm4che</groupId>
      <artifactId>dcm4che-imageio</artifactId>
      <version>5.30.0</version>
    </dependency>


    <!-- jsoup -->
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.16.1</version>
    </dependency>

    <!-- bidirectional map -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.4</version>
    </dependency>


    <!-- spring boot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>3.1.3</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>3.1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-dependencies</artifactId>
      <version>3.1.3</version>
      <type>pom</type>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webflux</artifactId>
      <version>6.0.13</version>
    </dependency>
    <!-- -->

    <!-- apache kafka -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
      <version>3.0.12</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <version>3.0.12</version>
      <scope>test</scope>
    </dependency>
    <!-- apache kafka -->
    


    <!-- graphdb -->
    <dependency>
      <groupId>com.ontotext.graphdb</groupId>
      <artifactId>graphdb-runtime</artifactId>
      <version>10.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.ontotext.graphdb</groupId>
      <artifactId>graphdb-client-api</artifactId>
      <version>10.0.0</version>
    </dependency>
    <!-- rdf4j -->
    <!-- don't change the version to 4.2.0-> required classes are missing, eg org.eclipse.rdf4j.model.util.Configurations-->
    <dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-model-vocabulary</artifactId>
      <version>4.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-model</artifactId>
      <version>4.3.8</version>
    </dependency>

    <!-- Some of the following dependencies cause conflicts with spring boot's WebClient HTTP API
         (when making request to python services - bertmap, aaexpansion -)
            java.lang.NoClassDefFoundError: org/eclipse/jetty/reactive/client/ReactiveRequest
            at org.springframework.http.client.reactive.JettyClientHttpRequest.<init>(JettyClientHttpRequest.java:60)
            ~[KnowledgeGraphsJava-1.0-SNAPSHOT.jar:1.0-SNAPSHOT]
         https://stackoverflow.com/questions/70769259/jettyreactiveclient-noclassdeffounderror-in-tests
         Kept only the dependencies required for creating graphdb repo and uploading the KGs.
    -->
    <!--<dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-rio-turtle</artifactId>
      <version>4.3.8</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-storage</artifactId>
      <version>4.2.0</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-tools-federation</artifactId>
      <version>4.2.0</version>
    </dependency> -->
    <!-- -->



  </dependencies>
<!-- =============================================================================================================== -->

    <build>
        <plugins>

          <!-- slim jar plugin --> <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>9</source>
                    <target>9</target>
                </configuration>
            </plugin> -->

          <!-- uber jar plugin -->
          <!--
          The following plugin for uber jar build is not compatible with graphdb/rdf4j libraries.
          No errors when running inside ide, but when running uber jar or docker image:
              org.eclipse.rdf4j.rio.UnsupportedRDFormatException: Did not recognise RDF format object Turtle
              (mimeTypes=text/turtle, application/x-turtle; ext=ttl)
              at org.eclipse.rdf4j.rio.Rio.lambda$unsupportedFormat$0(Rio.java:766)
          from GraphDB.java line 77: RDFParser rdfParser = Rio.createParser(RDFFormat.TURTLE);
          -->
          <!--<plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-assembly-plugin</artifactId>
             <version>3.3.0</version>

             <configuration>
               <descriptorRefs>
                 <descriptorRef>jar-with-dependencies</descriptorRef>
               </descriptorRefs>

               <archive>
                 <manifest>
                   <mainClass>org.example.KnowledgeGraphsJavaApp</mainClass>
                 </manifest>
               </archive>
             </configuration>

             <executions>
               <execution>
                 <id>assemble-all</id>
                 <phase>package</phase>
                 <goals>
                   <goal>single</goal>
                 </goals>
               </execution>
             </executions>
        </plugin>-->

          <!-- Alternative plugin for uber jar build, compatible with rdf4j and spring boot libraries.
          https://groups.google.com/g/rdf4j-users/c/Au[add 2 - here]U7LGrAg
          https://stackoverflow.com/questions/40907324/rdf4j-rio-unsupportedrdformatexception-when-adding-data-to-an-httprepository-usi
          https://itecnote.com/tecnote/maven-shade-for-parameter-resource-cannot-find-resource-in-class-org-apache-maven-plugins-shade-resource-manifestresourcetransformer/
          -->
           <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-shade-plugin</artifactId>
             <version>3.2.4</version>
             <configuration>
               <filters>
                 <filter>
                   <artifact>*:*</artifact>
                   <excludes>
                     <exclude>META-INF/*.SF</exclude>
                     <exclude>META-INF/*.DSA</exclude>
                     <exclude>META-INF/*.RSA</exclude>
                   </excludes>
                 </filter>
               </filters>
             </configuration>
             <executions>
               <execution>
                 <id>shade-jar-with-dependencies</id>
                 <phase>package</phase>
                 <goals>
                   <goal>shade</goal>
                 </goals>
                 <configuration>
                   <transformers>
                     <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                     <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                       <mainClass>org.example.KnowledgeGraphsJavaApp</mainClass>
                     </transformer>
                   </transformers>
                 </configuration>
               </execution>
             </executions>
           </plugin>

        </plugins>
    </build>


</project>
